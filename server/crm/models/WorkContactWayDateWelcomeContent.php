<?php

	namespace app\models;

	use app\components\InvalidDataException;
	use app\util\DateUtil;
	use app\util\SUtils;
	use Yii;
	use yii\helpers\Json;

	/**
	 * This is the model class for table "{{%work_contact_way_date_welcome_content}}".
	 *
	 * @property int                       $id
	 * @property int                       $date_id     渠道活码欢迎语日期表ID
	 * @property string                    $content     欢迎语内容
	 * @property string                    $welcome     欢迎语给前端用的
	 * @property string                    $start_time  开始时刻
	 * @property string                    $end_time    结束时刻
	 * @property int                       $create_time 创建时间
	 *
	 * @property WorkContactWayDateWelcome $date
	 */
	class WorkContactWayDateWelcomeContent extends \yii\db\ActiveRecord
	{
		/**
		 * {@inheritdoc}
		 */
		public static function tableName ()
		{
			return '{{%work_contact_way_date_welcome_content}}';
		}

		/**
		 * {@inheritdoc}
		 */
		public function rules ()
		{
			return [
				[['date_id', 'create_time'], 'integer'],
				[['content', 'welcome'], 'string'],
				[['start_time', 'end_time'], 'string', 'max' => 32],
				[['date_id'], 'exist', 'skipOnError' => true, 'targetClass' => WorkContactWayDateWelcome::className(), 'targetAttribute' => ['date_id' => 'id']],
			];
		}

		/**
		 * {@inheritdoc}
		 */
		public function attributeLabels ()
		{
			return [
				'id'          => 'ID',
				'date_id'     => '渠道活码欢迎语日期表ID',
				'content'     => '欢迎语内容',
				'welcome'     => '欢迎语给前端用的',
				'start_time'  => '开始时刻',
				'end_time'    => '结束时刻',
				'create_time' => '创建时间',
			];
		}

		/**
		 * @return \yii\db\ActiveQuery
		 */
		public function getDate ()
		{
			return $this->hasOne(WorkContactWayDateWelcome::className(), ['id' => 'date_id']);
		}

		/**
		 * {@inheritDoc}
		 * @return bool
		 */
		public function beforeSave ($insert)
		{
			$this->welcome = rawurlencode(rawurldecode($this->welcome));
			$this->content = rawurlencode(rawurldecode($this->content));

			return parent::beforeSave($insert); // TODO: Change the autogenerated stub
		}

		/**
		 * {@inheritDoc}
		 */
		public function afterFind ()
		{
			if (!empty($this->welcome)) {
				$this->welcome = rawurldecode($this->welcome);
			}
			if (!empty($this->content)) {
				$this->content = rawurldecode($this->content);
			}

			parent::afterFind(); // TODO: Change the autogenerated stub
		}

		/**
		 * @param $id
		 *
		 * @return array
		 *
		 */
		public static function getData ($id, $way_id)
		{
			$timeDate   = [];
			$welContent = self::find()->andWhere(['date_id' => $id])->all();
			if (!empty($welContent)) {
				foreach ($welContent as $k => $val) {
					$timeDate[$k]['start_time']       = $val->start_time;
					$timeDate[$k]['end_time']         = $val->end_time;
					$content                          = !empty($val->welcome) ? Json::decode($val->welcome, true) : [];
					$contentNew                       = !empty($val->content) ? Json::decode($val->content, true) : [];
					$welcome_content['add_type']      = 0;
					$welcome_content['material_sync'] = $content['materialSync'];
					$welcome_content['groupId']       = $content['groupId'];
					$welcome_content['attachment_id'] = $content['attachment_id'];
					$welcome_content['text_content']  = '';

					//beenlee 雷达链接参数
					$content['associat_param'] = 'content_' . $id . '_' . $val->id;
					$content['id']             = $way_id; //beenlee 设置为活码id

					$contentData                      = WorkWelcome::getContentData($contentNew);
					$welcome_content                  = WorkWelcome::getWelcomeData($content, $contentNew, $contentData, 1);
					$welcome_content['attachment_id'] = !empty($welcome_content['attachment_id']) ? $welcome_content['attachment_id'] : 0;
					$timeDate[$k]['content']          = $welcome_content;
				}
			}

			return $timeDate;
		}

		/**
		 * @param $dateNow
		 * @param $dateId
		 *
		 * @return array
		 *
		 */
		public static function getContent ($dateNow, $dateId)
		{
			$content    = [];
			$welContent = self::find()->where(['date_id' => $dateId])->all();
			if (!empty($welContent)) {
				foreach ($welContent as $k => $con) {
					$timeNow   = time();
					$timeStart = strtotime($dateNow . ' ' . $con->start_time);
					if ($con->end_time == '00:00') {
						$con->end_time = '23:59:59';
					}
					$timeEnd = strtotime($dateNow . ' ' . $con->end_time);
					if ($timeStart <= $timeNow && $timeNow <= $timeEnd) {
						$content = Json::decode($con->content, true);
						$welcome = Json::decode($con->welcome, true);

						if (isset($content['link']) && empty($content['link']['picurl']) && !empty($welcome['attachment_id'])) {
							$content['link']['picurl'] = $welcome['attachment_id'];
						}

						//todo beenlee 活码 雷达链接
						if (isset($welcome['radar_open']) && $welcome['radar_open'] > 0) {
							$content['radar']['associat_param']             = 'content_' . $dateId . '_' . $con->id;
							$content['radar']['radar_open']                 = $welcome['radar_open'];
							$content['radar']['radar_tag_open']             = $welcome['radar_tag_open'];
							$content['radar']['radar_dynamic_notification'] = $welcome['radar_dynamic_notification'];
							$content['radar']['radar_tag_ids']              = $welcome['radar_tag_ids'];
							$content['radar']['attachment_id']              = isset($welcome['attachment_id'])?$welcome['attachment_id']:0;
							$content['radar']['link_attachment_id']         = isset($welcome['link_attachment_id'])?$welcome['link_attachment_id']:0;
							$content['radar']['sync_attachment_id']         = isset($welcome['sync_attachment_id'])?$welcome['sync_attachment_id']:0;
						}
					}
				}
			}

			return $content;
		}

		/**
		 * @param $data
		 * @param $id
		 * @param $corpId
		 * @param $uid
		 *
		 * @throws InvalidDataException
		 * @throws \app\components\InvalidParameterException
		 */
		public static function add ($data, $id, $corpId, $uid, $wayId)
		{
			if (!empty($data)) {
				foreach ($data as $val) {
					$content = self::find()->where(['date_id' => $id, 'start_time' => $val['start_time'], 'end_time' => $val['end_time']])->one();
					\Yii::error($content, '$content');
					if (empty($content)) {
						$content              = new WorkContactWayDateWelcomeContent();
						$content->create_time = time();
					}

					if ($val['content']['add_type'] == 2 && !empty($val['content']['link_image'])) {
						$link_image      = $val['content']['link_image'];
						$sub_id          = isset($val['content']['sub_id']) ? $val['content']['sub_id'] : 0;
						$isMasterAccount = isset($val['content']['isMasterAccount']) ? $val['content']['isMasterAccount'] : 0;
						$group_id        = NULL;
						unset($val['content']['link_image']);
						unset($val['content']['sub_id']);
						unset($val['content']['isMasterAccount']);

						if (empty($group_id)) {
							$groupInfo = AttachmentGroup::findOne(['uid' => $uid, 'is_not_group' => 1]);
							if (empty($groupInfo)) {
								$group               = new AttachmentGroup();
								$group->uid          = $uid;
								$group->title        = '未分组';
								$group->sort         = 1;
								$group->is_not_group = 1;
								$group->create_time  = DateUtil::getCurrentTime();
								if (!$group->validate() || !$group->save()) {
									throw new InvalidDataException(SUtils::modelError($group));
								}
								Attachment::updateAll(['group_id' => $group->id], ['uid' => $uid, 'status' => 1, 'group_id' => NULL]);
								$group_id = $group->id;
							} else {
								$group_id = $groupInfo->id;
							}
						}

						//上传临时图片素材
						$attachment                  = new Attachment();
						$attachment->uid             = $uid;
						$attachment->sub_id          = $sub_id;
						$attachment->isMasterAccount = $isMasterAccount;
						$attachment->file_type       = 1;
						$attachment->create_time     = DateUtil::getCurrentTime();
						$attachment->group_id        = $group_id;
						$attachment->is_temp         = 1;

						//文件
						$link_image_name = pathinfo($link_image, PATHINFO_FILENAME);
						$length          = mb_strlen($link_image_name, 'utf-8');
						if ($length > 128) {
							$attachment->file_name = mb_substr($link_image_name, 0, 128, 'utf-8');
						} else {
							$attachment->file_name = $link_image_name;
						}

						$img_data                      = getimagesize(\Yii::getAlias('@app') . $link_image);
						$attachment->local_path        = $link_image;
						$attachment->file_length       = $img_data['bits'];
						$attachment->file_content_type = $img_data['mime'];
						$attachment->file_width        = $img_data[0];
						$attachment->file_height       = $img_data[1];

						if (!$attachment->validate() || !$attachment->save()) {
							throw new InvalidDataException(SUtils::modelError($attachment));
						}

						$val['content']['link_attachment_id'] = $attachment->id;
					}

					$welcomeContent                  = $val['content'];
					$welcomeContent['uid']           = $uid;
					$welcomeContent['material_sync'] = $val['content']['material_sync'] = $welcomeContent['materialSync'];
					//欢迎语同步到内容库
					$sync_attachment_id = 0;
					if ($welcomeContent['material_sync'] == 1 && empty($welcomeContent['attachment_id'])) {
						$welcomeContent['sync_attachment_id'] = 0;
						$sync_attachment_id                   = WorkWelcome::syncData($welcomeContent, 1);
						$welcomeContent['attachment_id'] = $sync_attachment_id;
					}
					$val['content']['sync_attachment_id'] = $sync_attachment_id;
					$welcomeContent['sync_attachment_id'] = $sync_attachment_id;

					if ($welcomeContent['add_type'] == 3 && !empty($welcomeContent['attachment_id'])) {
						$val['content']['attachment_id'] = $welcomeContent['attachment_id'];
						$welcomeContent['corp_id']          = $corpId;
						$welcomeContent['work_material_id'] = WorkWelcome::getMaterialId($welcomeContent);
					}

					$content->date_id    = $id;
					$content->start_time = $val['start_time'];
					$content->end_time   = $val['end_time'];
					$content->welcome    = Json::encode($val['content']);
					$con                 = WorkWelcome::getContent($val['content']);
					$content->content    = Json::encode($con);
					if (!$content->validate() || !$content->save()) {
						\Yii::error(SUtils::modelError($content), 'message');
						throw new InvalidDataException($content . SUtils::modelError($content));
					}

					if (!($val['content']['material_sync'] == 1 && empty($val['content']['attachment_id']))) {
						$associat_param = 'content_' . $id . '_' . $content->id;
						//beenlee 不同步 雷达规则跟随欢迎语
						if (isset($val['content']['dynamic_notification'])) {
							$val['content']['radar_dynamic_notification'] = $val['content']['dynamic_notification'];
						}
						if (isset($val['content']['radar_open'], $val['content']['radar_dynamic_notification'], $val['content']['radar_tag_open'], $val['content']['radar_tag_ids']) && $val['content']['radar_open'] >= 0) {
							RadarLink::addRadarLink(1, $wayId, $val['content']['radar_dynamic_notification'], $val['content']['radar_tag_open'], $val['content']['radar_tag_ids'], $val['content']['radar_open'], '渠道活码ID:' . $wayId, $associat_param, $con);
						}
					}
				}
			}
		}

	}
